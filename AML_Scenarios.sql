prompt
prompt Creating function SCENARIO#0111
prompt ===============================
prompt
CREATE OR REPLACE FUNCTION AML_USER.SCENARIO#0111(
  IN_ID                    IN OUT NUMBER,   -- хд
  IN_ISSUEDBID             IN OUT NUMBER,   -- ад хярнвмхй
  IN_BANKOPERATIONID       IN OUT VARCHAR2, -- мнлеп ноепюжхх
  IN_ORDERNUMBER           IN OUT VARCHAR2, -- мнлеп гюъбйх б яхяреле
  IN_BRANCH                IN OUT VARCHAR2, -- йнд тхкхюкю
  IN_CURRENCYCODE          IN OUT VARCHAR2, -- йнд бюкчрш
  IN_OPERATIONDATETIME     IN OUT DATE,     -- дюрю ноепюжхх
  IN_BASEAMOUNT            IN OUT NUMBER,   -- ясллю (мюж)
  IN_CURRENCYAMOUNT        IN OUT NUMBER,   -- ясллю (бюк)
  IN_EKNPCODE              IN OUT VARCHAR2, -- ймо
  IN_DOCNUMBER             IN OUT VARCHAR2, -- ╧ днйслемрю
  IN_DOCDATE               IN OUT DATE,     -- дюрю днйслемрю
  IN_DOCCATEGORY           IN OUT NUMBER,   -- йюрецнпхъ днйслемрю
  IN_DOCSUSPIC             IN OUT NUMBER,   -- рхо онднгпхрекэмнярх
  IN_OPERATIONSTATUS       IN OUT NUMBER,   -- янярнъмхе ноепюжхх
  IN_OPERATIONREASON       IN OUT VARCHAR2, -- нямнбюмхе янбепьемхъ
  OUT_MESS_NUMBER          OUT NUMBER,      -- тл1 - мнлеп тнплш
  OUT_MESS_DATE            OUT DATE,        -- тл1 - дюрю тнплш
  OUT_MESS_KIND            OUT NUMBER,      -- тл1 - бхд днйслемрю
  OUT_MESS_STATUS          OUT NUMBER,      -- тл1 - нямнбюмхе ондювх
  OUT_SUSPIC_KIND          OUT NUMBER,      -- бхд днйслемрю (тл/онднгпхр)
  OUT_SUSPICIOUSTYPECODE   OUT NUMBER,      -- йнд йюрецнпхх тл
  OUT_CRITERIAFIRST        OUT NUMBER,      -- опхгмюй онднгпхрекэмнярх 1
  OUT_CRITERIASECOND       OUT NUMBER,      -- опхгмюй онднгпхрекэмнярх 2
  OUT_CRITERIATHIRD        OUT NUMBER,      -- опхгмюй онднгпхрекэмнярх 3
  OUT_CRITERIADIFFICULTIES OUT VARCHAR2,    -- гюрпсдмемхъ
  OUT_OPERATIONEXTRAINFO   OUT VARCHAR2,    -- днонкмхрекэмюъ хмтнплюжхъ
  OUT_OFFLINEOPERATIONID   OUT NUMBER,      -- ID ноепюжхх хг TB_OFFLINEOPERATIONS
  OUT_OPERATION_LIST       OUT VARCHAR2     -- яохянй ID ноепюжхи TB_OFFLINEOPERATIONS
) RETURN NUMBER IS
  v_res NUMBER; -- ярюрся бнгбпюрю, еякх япюаюршбюер яжемюпхи, рн бнгбпюыюел 1
  sWord VARCHAR2(50) := '';

BEGIN
  v_res := -1;

  /*************************************************************************************
  нохяюмхе яжемюпхъ:
  0111 - ОНКСВЕМХЕ БШХЦПШЬЮ, ОН ПЕГСКЭРЮРЮЛ ОПНБЕДЕМХЪ ОЮПХ.

  ясллю > = 3 000 000 KZT Х йЮРЕЦНПХЪ ДНЙСЛЕМРЮ = 3,4
  х
  нямнбюмхе яндепфхр: ОЮПХ, БШХЦП,БШХЦПШЬ,БШХЦПШЬЮ


  *************************************************************************************/
  -- мювюкн онкэгнбюрекэяйнцн йндю
  IF IN_BASEAMOUNT >= 3000000 AND IN_DOCCATEGORY IN (3,4) THEN

    IF INSTR(UPPER(IN_OPERATIONREASON), 'бшхцп') > 0 THEN
      sWord := 'бшхцп';
    ELSIF INSTR(UPPER(IN_OPERATIONREASON), 'оюпх ') > 0 OR
          INSTR(UPPER(IN_OPERATIONREASON), 'оюпх.') > 0 OR
          INSTR(UPPER(IN_OPERATIONREASON), 'оюпх,') > 0 OR
          INSTR(UPPER(IN_OPERATIONREASON), 'оюпх!') > 0 OR
          INSTR(UPPER(IN_OPERATIONREASON), 'оюпх)') > 0 OR
          INSTR(UPPER(IN_OPERATIONREASON), 'оюпх(') > 0 OR
          INSTR(UPPER(IN_OPERATIONREASON), 'оюпх:') > 0 OR
          INSTR(UPPER(IN_OPERATIONREASON), 'оюпх;') > 0 OR
          INSTR(UPPER(IN_OPERATIONREASON), 'оюпх?') > 0 OR
          INSTR(UPPER(IN_OPERATIONREASON), 'оюпх[') > 0 OR
          INSTR(UPPER(IN_OPERATIONREASON), 'оюпх]') > 0 OR
          INSTR(UPPER(IN_OPERATIONREASON), 'оюпх{') > 0 OR
          INSTR(UPPER(IN_OPERATIONREASON), 'оюпх}') > 0 OR
          INSTR(UPPER(IN_OPERATIONREASON), 'оюпх#') > 0 OR
          INSTR(UPPER(IN_OPERATIONREASON), 'оюпх@') > 0 OR
          INSTR(UPPER(IN_OPERATIONREASON), 'оюпх!') > 0 OR
          INSTR(UPPER(IN_OPERATIONREASON), 'оюпх$') > 0
    THEN
      sWord := 'оюпх';
    END IF;

    IF sWord IS NOT NULL THEN

      OUT_MESS_NUMBER          := get_mess_number();
      OUT_MESS_DATE            := SYSDATE;
      OUT_MESS_KIND            := '1';
      OUT_MESS_STATUS          := '1';
      OUT_SUSPIC_KIND          := '1';
      OUT_SUSPICIOUSTYPECODE   := '0111';
      OUT_CRITERIAFIRST        := NULL;
      OUT_CRITERIASECOND       := NULL;
      OUT_CRITERIATHIRD        := NULL;
      OUT_CRITERIADIFFICULTIES := '';
      OUT_OPERATIONEXTRAINFO   := '[яЖЕМЮПХИ ╧ 0111] пЮГНБЮЪ НОЕПЮЖХЪ' ||
                                  chr(10) ||
                                  'мЮГМЮВЕМХЕ ОКЮРЕФЮ: '||IN_OPERATIONREASON||chr(10)||
                                  get_doc_desc(IN_DOCDATE,IN_DOCNUMBER) ||
                                  /*'оНКСВЕМХЕ БШХЦПШЬЮ, Б ПЮГЛЕПЕ > 1000000 KZT' ||
                                  chr(10) || 'ймо = 119' || chr(10) ||*/
                                  'яНБОЮДЕМХЕ ЯН ЯКНБНЛ: ' || sWord;
      IN_OPERATIONREASON       := '28';
      IN_DOCNUMBER             := '';
      IN_DOCDATE               := '';
      OUT_OFFLINEOPERATIONID   := IN_ID;
      OUT_OPERATION_LIST       := IN_ID;
      v_res                    := 1;
    END IF;

  END IF;

  -- йнмеж онкэгнбюрекэяйнцн йндю
  RETURN v_res;
END;
/

prompt
prompt Creating function SCENARIO#0121
prompt ===============================
prompt
CREATE OR REPLACE FUNCTION AML_USER.SCENARIO#0121(
  IN_ID                    IN OUT NUMBER,   -- хд
  IN_ISSUEDBID             IN OUT NUMBER,   -- ад хярнвмхй
  IN_BANKOPERATIONID       IN OUT VARCHAR2, -- мнлеп ноепюжхх
  IN_ORDERNUMBER           IN OUT VARCHAR2, -- мнлеп гюъбйх б яхяреле
  IN_BRANCH                IN OUT VARCHAR2, -- йнд тхкхюкю
  IN_CURRENCYCODE          IN OUT VARCHAR2, -- йнд бюкчрш
  IN_OPERATIONDATETIME     IN OUT DATE,     -- дюрю ноепюжхх
  IN_BASEAMOUNT            IN OUT NUMBER,   -- ясллю (мюж)
  IN_CURRENCYAMOUNT        IN OUT NUMBER,   -- ясллю (бюк)
  IN_EKNPCODE              IN OUT VARCHAR2, -- ймо
  IN_DOCNUMBER             IN OUT VARCHAR2, -- ╧ днйслемрю
  IN_DOCDATE               IN OUT DATE,     -- дюрю днйслемрю
  IN_DOCCATEGORY           IN OUT NUMBER,   -- йюрецнпхъ днйслемрю
  IN_DOCSUSPIC             IN OUT NUMBER,   -- рхо онднгпхрекэмнярх
  IN_OPERATIONSTATUS       IN OUT NUMBER,   -- янярнъмхе ноепюжхх
  IN_OPERATIONREASON       IN OUT VARCHAR2, -- нямнбюмхе янбепьемхъ
  OUT_MESS_NUMBER          OUT NUMBER,      -- тл1 - мнлеп тнплш
  OUT_MESS_DATE            OUT DATE,        -- тл1 - дюрю тнплш
  OUT_MESS_KIND            OUT NUMBER,      -- тл1 - бхд днйслемрю
  OUT_MESS_STATUS          OUT NUMBER,      -- тл1 - нямнбюмхе ондювх
  OUT_SUSPIC_KIND          OUT NUMBER,      -- бхд днйслемрю (тл/онднгпхр)
  OUT_SUSPICIOUSTYPECODE   OUT NUMBER,      -- йнд йюрецнпхх тл
  OUT_CRITERIAFIRST        OUT NUMBER,      -- опхгмюй онднгпхрекэмнярх 1
  OUT_CRITERIASECOND       OUT NUMBER,      -- опхгмюй онднгпхрекэмнярх 2
  OUT_CRITERIATHIRD        OUT NUMBER,      -- опхгмюй онднгпхрекэмнярх 3
  OUT_CRITERIADIFFICULTIES OUT VARCHAR2,    -- гюрпсдмемхъ
  OUT_OPERATIONEXTRAINFO   OUT VARCHAR2,    -- днонкмхрекэмюъ хмтнплюжхъ
  OUT_OFFLINEOPERATIONID   OUT NUMBER,      -- ID ноепюжхх хг TB_OFFLINEOPERATIONS
  OUT_OPERATION_LIST       OUT VARCHAR2     -- яохянй ID ноепюжхи TB_OFFLINEOPERATIONS
) RETURN NUMBER IS
  v_res NUMBER; -- ярюрся бнгбпюрю, еякх япюаюршбюер яжемюпхи, рн бнгбпюыюел 1
  sWord VARCHAR2(50) := '';

BEGIN
  v_res := -1;

  /*************************************************************************************
  нохяюмхе яжемюпхъ:
  0121 - оНКСВЕМХЕ БШХЦПШЬЮ ОН ПЕГСКЭРЮРЮЛ ОПНБЕДЕМХЪ ЮГЮПРМНИ ХЦПШ Б ХЦНПМШУ ГЮБЕДЕМХЪУ;

  ясллю > = 3 000 000 KZT Х йЮРЕЦНПХЪ ДНЙСЛЕМРЮ =3, 4
  х
  нямнбюмхе яндепфхр: ЮГЮПР,ЮГЮПРМШИ,ЮГЮПРМШУ,ЮГЮПРМШЕ, хцпю

  *************************************************************************************/
  -- мювюкн онкэгнбюрекэяйнцн йндю
  IF IN_BASEAMOUNT >= 3000000 AND IN_DOCCATEGORY IN (3,4) THEN

    IF INSTR(UPPER(IN_OPERATIONREASON), 'хцпю') > 0 then
      sWord := 'хцпю';
    elsif INSTR(UPPER(IN_OPERATIONREASON), 'хцпш') > 0 then
      sWord := 'хцпш';
    elsif INSTR(UPPER(IN_OPERATIONREASON), 'югюпр') > 0 then
      sWord := 'югюпр';
    end if;

    IF sWord IS NOT NULL THEN

      OUT_MESS_NUMBER          := get_mess_number();
      OUT_MESS_DATE            := SYSDATE;
      OUT_MESS_KIND            := '1';
      OUT_MESS_STATUS          := '1';
      OUT_SUSPIC_KIND          := '1';
      OUT_SUSPICIOUSTYPECODE   := '0121';
      OUT_CRITERIAFIRST        := NULL;
      OUT_CRITERIASECOND       := NULL;
      OUT_CRITERIATHIRD        := NULL;
      OUT_CRITERIADIFFICULTIES := '';
      OUT_OPERATIONEXTRAINFO   := '[яЖЕМЮПХИ ╧ 0121] пЮГНБЮЪ НОЕПЮЖХЪ' ||
                                  chr(10) ||
                                  'мЮГМЮВЕМХЕ ОКЮРЕФЮ: '||IN_OPERATIONREASON||chr(10)||
                                  get_doc_desc(IN_DOCDATE,IN_DOCNUMBER) ||
                                  /*'оНКСВЕМХЕ БШХЦПШЬЮ, Б ПЮГЛЕПЕ > 1000000 KZT' ||
                                  chr(10) || 'ймо = 119' || chr(10) ||*/
                                  'яНБОЮДЕМХЕ ЯН ЯКНБНЛ: ' || sWord;
      IN_OPERATIONREASON       := '28';
      IN_DOCNUMBER             := '';
      IN_DOCDATE               := '';
      OUT_OFFLINEOPERATIONID   := IN_ID;
      OUT_OPERATION_LIST       := IN_ID;
      v_res                    := 1;
    END IF;

  END IF;

  -- йнмеж онкэгнбюрекэяйнцн йндю
  RETURN v_res;
END;
/

prompt
prompt Creating function SCENARIO#0131
prompt ===============================
prompt
CREATE OR REPLACE FUNCTION AML_USER.SCENARIO#0131(
  IN_ID                    IN OUT NUMBER,   -- хд
  IN_ISSUEDBID             IN OUT NUMBER,   -- ад хярнвмхй
  IN_BANKOPERATIONID       IN OUT VARCHAR2, -- мнлеп ноепюжхх
  IN_ORDERNUMBER           IN OUT VARCHAR2, -- мнлеп гюъбйх б яхяреле
  IN_BRANCH                IN OUT VARCHAR2, -- йнд тхкхюкю
  IN_CURRENCYCODE          IN OUT VARCHAR2, -- йнд бюкчрш
  IN_OPERATIONDATETIME     IN OUT DATE,     -- дюрю ноепюжхх
  IN_BASEAMOUNT            IN OUT NUMBER,   -- ясллю (мюж)
  IN_CURRENCYAMOUNT        IN OUT NUMBER,   -- ясллю (бюк)
  IN_EKNPCODE              IN OUT VARCHAR2, -- ймо
  IN_DOCNUMBER             IN OUT VARCHAR2, -- ╧ днйслемрю
  IN_DOCDATE               IN OUT DATE,     -- дюрю днйслемрю
  IN_DOCCATEGORY           IN OUT NUMBER,   -- йюрецнпхъ днйслемрю
  IN_DOCSUSPIC             IN OUT NUMBER,   -- рхо онднгпхрекэмнярх
  IN_OPERATIONSTATUS       IN OUT NUMBER,   -- янярнъмхе ноепюжхх
  IN_OPERATIONREASON       IN OUT VARCHAR2, -- нямнбюмхе янбепьемхъ
  OUT_MESS_NUMBER          OUT NUMBER,      -- тл1 - мнлеп тнплш
  OUT_MESS_DATE            OUT DATE,        -- тл1 - дюрю тнплш
  OUT_MESS_KIND            OUT NUMBER,      -- тл1 - бхд днйслемрю
  OUT_MESS_STATUS          OUT NUMBER,      -- тл1 - нямнбюмхе ондювх
  OUT_SUSPIC_KIND          OUT NUMBER,      -- бхд днйслемрю (тл/онднгпхр)
  OUT_SUSPICIOUSTYPECODE   OUT NUMBER,      -- йнд йюрецнпхх тл
  OUT_CRITERIAFIRST        OUT NUMBER,      -- опхгмюй онднгпхрекэмнярх 1
  OUT_CRITERIASECOND       OUT NUMBER,      -- опхгмюй онднгпхрекэмнярх 2
  OUT_CRITERIATHIRD        OUT NUMBER,      -- опхгмюй онднгпхрекэмнярх 3
  OUT_CRITERIADIFFICULTIES OUT VARCHAR2,    -- гюрпсдмемхъ
  OUT_OPERATIONEXTRAINFO   OUT VARCHAR2,    -- днонкмхрекэмюъ хмтнплюжхъ
  OUT_OFFLINEOPERATIONID   OUT NUMBER,      -- ID ноепюжхх хг TB_OFFLINEOPERATIONS
  OUT_OPERATION_LIST       OUT VARCHAR2     -- яохянй ID ноепюжхи TB_OFFLINEOPERATIONS
) RETURN NUMBER IS
  v_res NUMBER; -- ярюрся бнгбпюрю, еякх япюаюршбюер яжемюпхи, рн бнгбпюыюел 1
  sWord VARCHAR2(50) := '';

BEGIN
  v_res := -1;

  /*************************************************************************************
  нохяюмхе яжемюпхъ:
  0131 оНКСВЕМХЕ БШХЦПШЬЮ ОН ПЕГСКЭРЮРЮЛ ОПНБЕДЕМХЪ КНРЕПЕХ
  ясллю > = 3 000 000 KZT Х йЮРЕЦНПХЪ ДНЙСЛЕМРЮ = 3,4
  х
  нямнбюмхе яндепфхр:КНРЕПЕЪ,КНРЕПЕХ

  *************************************************************************************/
  -- мювюкн онкэгнбюрекэяйнцн йндю
  IF IN_BASEAMOUNT >= 3000000 AND IN_DOCCATEGORY IN (3,4) THEN

    IF INSTR(UPPER(IN_OPERATIONREASON), 'кнрепеъ') > 0 THEN
      sWord := 'кнрепеъ';
    ELSIF INSTR(UPPER(IN_OPERATIONREASON), 'кнрепех') > 0 THEN
      sWord := 'кнрепех';
    END IF;

    IF sWord IS NOT NULL THEN

      OUT_MESS_NUMBER          := get_mess_number();
      OUT_MESS_DATE            := SYSDATE;
      OUT_MESS_KIND            := '1';
      OUT_MESS_STATUS          := '1';
      OUT_SUSPIC_KIND          := '1';
      OUT_SUSPICIOUSTYPECODE   := '0131';
      OUT_CRITERIAFIRST        := NULL;
      OUT_CRITERIASECOND       := NULL;
      OUT_CRITERIATHIRD        := NULL;
      OUT_CRITERIADIFFICULTIES := '';
      OUT_OPERATIONEXTRAINFO   := '[яЖЕМЮПХИ ╧ 0131] пЮГНБЮЪ НОЕПЮЖХЪ' ||
                                  chr(10) ||
                                  'мЮГМЮВЕМХЕ ОКЮРЕФЮ: '||IN_OPERATIONREASON||chr(10)||
                                  get_doc_desc(IN_DOCDATE,IN_DOCNUMBER) ||
                                  /*'оНКСВЕМХЕ БШХЦПШЬЮ, Б ПЮГЛЕПЕ > 1000000 KZT' ||
                                  chr(10) || 'ймо = 119' || chr(10) ||*/
                                  'яНБОЮДЕМХЕ ЯН ЯКНБНЛ: ' || sWord;
      IN_OPERATIONREASON       := '28';
      IN_DOCNUMBER             := '';
      IN_DOCDATE               := '';
      OUT_OFFLINEOPERATIONID   := IN_ID;
      OUT_OPERATION_LIST       := IN_ID;
      v_res                    := 1;
    END IF;

  END IF;

  -- йнмеж онкэгнбюрекэяйнцн йндю
  RETURN v_res;
END;
/

prompt
prompt Creating function SCENARIO#0211
prompt ===============================
prompt
CREATE OR REPLACE FUNCTION AML_USER.SCENARIO#0211(IN_ID                    IN OUT NUMBER, -- хд
                                         IN_ISSUEDBID             IN OUT NUMBER, -- ад хярнвмхй
                                         IN_BANKOPERATIONID       IN OUT VARCHAR2, -- мнлеп ноепюжхх
                                         IN_ORDERNUMBER           IN OUT VARCHAR2, -- мнлеп гюъбйх б яхяреле
                                         IN_BRANCH                IN OUT VARCHAR2, -- йнд тхкхюкю
                                         IN_CURRENCYCODE          IN OUT VARCHAR2, -- йнд бюкчрш
                                         IN_OPERATIONDATETIME     IN OUT DATE, -- дюрю ноепюжхх
                                         IN_BASEAMOUNT            IN OUT NUMBER, -- ясллю (мюж)
                                         IN_CURRENCYAMOUNT        IN OUT NUMBER, -- ясллю (бюк)
                                         IN_EKNPCODE              IN OUT VARCHAR2, -- ймо
                                         IN_DOCNUMBER             IN OUT VARCHAR2, -- ╧ днйслемрю
                                         IN_DOCDATE               IN OUT DATE, -- дюрю днйслемрю
                                         IN_DOCCATEGORY           IN OUT NUMBER, -- йюрецнпхъ днйслемрю
                                         IN_DOCSUSPIC             IN OUT NUMBER, -- рхо онднгпхрекэмнярх
                                         IN_OPERATIONSTATUS       IN OUT NUMBER, -- янярнъмхе ноепюжхх
                                         IN_OPERATIONREASON       IN OUT VARCHAR2, -- нямнбюмхе янбепьемхъ
                                         OUT_MESS_NUMBER          OUT NUMBER, -- тл1 - мнлеп тнплш
                                         OUT_MESS_DATE            OUT DATE, -- тл1 - дюрю тнплш
                                         OUT_MESS_KIND            OUT NUMBER, -- тл1 - бхд днйслемрю
                                         OUT_MESS_STATUS          OUT NUMBER, -- тл1 - нямнбюмхе ондювх
                                         OUT_SUSPIC_KIND          OUT NUMBER, -- бхд днйслемрю (тл/онднгпхр)
                                         OUT_SUSPICIOUSTYPECODE   OUT NUMBER, -- йнд йюрецнпхх тл
                                         OUT_CRITERIAFIRST        OUT NUMBER, -- опхгмюй онднгпхрекэмнярх 1
                                         OUT_CRITERIASECOND       OUT NUMBER, -- опхгмюй онднгпхрекэмнярх 2
                                         OUT_CRITERIATHIRD        OUT NUMBER, -- опхгмюй онднгпхрекэмнярх 3
                                         OUT_CRITERIADIFFICULTIES OUT VARCHAR2, -- гюрпсдмемхъ
                                         OUT_OPERATIONEXTRAINFO   OUT VARCHAR2, -- днонкмхрекэмюъ хмтнплюжхъ
                                         OUT_OFFLINEOPERATIONID   OUT NUMBER, -- ID ноепюжхх хг TB_OFFLINEOPERATIONS
                                         OUT_OPERATION_LIST       OUT VARCHAR2 -- яохянй ID ноепюжхи TB_OFFLINEOPERATIONS
                                         )

 RETURN NUMBER IS
  v_res NUMBER; -- ярюрся бнгбпюрю, еякх япюаюршбюер яжемюпхи, рн бнгбпюыюел 1
  sWord VARCHAR2(50) := '';
BEGIN
  v_res := -1;

  /*************************************************************************************
  нохяюмхе яжемюпхъ:
  0221 - ОПНДЮФЮ МЮКХВМНИ ХМНЯРПЮММНИ БЮКЧРШ ВЕПЕГ НАЛЕММШЕ ОСМЙРШ;
  йЮРЕЦНПХЪ ДНЙСЛЕМРЮ = 8 - ОНЙСОЙЮ
  х CСЛЛЮ>= 10 000 000 KZT
  х йнд ад ISSUEBD = 3
  х P_OPERATIONEXTRAINFO ЯНДЕПФХР  'опндюфю'

  *************************************************************************************/
  -- мювюкн онкэгнбюрекэяйнцн йндю
  IF INSTR(UPPER(IN_OPERATIONREASON), 'опндюфю') > 0 THEN
    sWord := 'опндюфю';  
  END IF;

  IF IN_BASEAMOUNT >= 10000000
     AND IN_DOCCATEGORY = 8
     AND sWord IS NOT NULL
     AND IN_ISSUEDBID = 3
  THEN
    OUT_MESS_NUMBER          := get_mess_number();
    OUT_MESS_DATE            := SYSDATE;
    OUT_MESS_KIND            := '1';
    OUT_MESS_STATUS          := '1';
    OUT_SUSPIC_KIND          := '1';
    OUT_SUSPICIOUSTYPECODE   := '0211';
    OUT_CRITERIAFIRST        := NULL;
    OUT_CRITERIASECOND       := NULL;
    OUT_CRITERIATHIRD        := NULL;
    OUT_CRITERIADIFFICULTIES := '';
    OUT_OPERATIONEXTRAINFO   := 'мЮГМЮВЕМХЕ ОКЮРЕФЮ: ' ||
                                IN_OPERATIONREASON || chr(10) ||
                                get_doc_desc(IN_DOCDATE,IN_DOCNUMBER)/*||
                                      'оНЙСОЙЮ, ОПНДЮФЮ Х НАЛЕМ МЮКХВМНИ ХМНЯРПЮММНИ БЮКЧРШ ВЕПЕГ НАЛЕММШЕ ОСМЙРШ, хМХЖХЮРХБЮ ЙКХЕМРЮ'||chr(10)||
                                      'Б ПЮГЛЕПЕ > 7000000 KZT'*/
     ;
    IN_OPERATIONREASON       := '29';
    IN_DOCNUMBER             := '';
    IN_DOCDATE               := '';
    OUT_OFFLINEOPERATIONID   := IN_ID;
    OUT_OPERATION_LIST       := IN_ID;
    v_res                    := 1;
  END IF;
  -- йнмеж онкэгнбюрекэяйнцн йндю
  RETURN v_res;
END;
/

prompt
prompt Creating function SCENARIO#10021
prompt ================================
prompt
CREATE OR REPLACE FUNCTION AML_USER.SCENARIO#10021(IN_ID                    IN OUT NUMBER, -- хд
                                          IN_ISSUEDBID             IN OUT NUMBER, -- ад хярнвмхй
                                          IN_BANKOPERATIONID       IN OUT VARCHAR2, -- мнлеп ноепюжхх
                                          IN_ORDERNUMBER           IN OUT VARCHAR2, -- мнлеп гюъбйх б яхяреле
                                          IN_BRANCH                IN OUT VARCHAR2, -- йнд тхкхюкю
                                          IN_CURRENCYCODE          IN OUT VARCHAR2, -- йнд бюкчрш
                                          IN_OPERATIONDATETIME     IN OUT DATE, -- дюрю ноепюжхх
                                          IN_BASEAMOUNT            IN OUT NUMBER, -- ясллю (мюж)
                                          IN_CURRENCYAMOUNT        IN OUT NUMBER, -- ясллю (бюк)
                                          IN_EKNPCODE              IN OUT VARCHAR2, -- ймо
                                          IN_DOCNUMBER             IN OUT VARCHAR2, -- ╧ днйслемрю
                                          IN_DOCDATE               IN OUT DATE, -- дюрю днйслемрю
                                          IN_DOCCATEGORY           IN OUT NUMBER, -- йюрецнпхъ днйслемрю
                                          IN_DOCSUSPIC             IN OUT NUMBER, -- рхо онднгпхрекэмнярх
                                          IN_OPERATIONSTATUS       IN OUT NUMBER, -- янярнъмхе ноепюжхх
                                          IN_OPERATIONREASON       IN OUT VARCHAR2, -- нямнбюмхе янбепьемхъ
                                          OUT_MESS_NUMBER          OUT NUMBER, -- тл1 - мнлеп тнплш
                                          OUT_MESS_DATE            OUT DATE, -- тл1 - дюрю тнплш
                                          OUT_MESS_KIND            OUT NUMBER, -- тл1 - бхд днйслемрю
                                          OUT_MESS_STATUS          OUT NUMBER, -- тл1 - нямнбюмхе ондювх
                                          OUT_SUSPIC_KIND          OUT NUMBER, -- бхд днйслемрю (тл/онднгпхр)
                                          OUT_SUSPICIOUSTYPECODE   OUT NUMBER, -- йнд йюрецнпхх тл
                                          OUT_CRITERIAFIRST        OUT NUMBER, -- опхгмюй онднгпхрекэмнярх 1
                                          OUT_CRITERIASECOND       OUT NUMBER, -- опхгмюй онднгпхрекэмнярх 2
                                          OUT_CRITERIATHIRD        OUT NUMBER, -- опхгмюй онднгпхрекэмнярх 3
                                          OUT_CRITERIADIFFICULTIES OUT VARCHAR2, -- гюрпсдмемхъ
                                          OUT_OPERATIONEXTRAINFO   OUT VARCHAR2, -- днонкмхрекэмюъ хмтнплюжхъ
                                          OUT_OFFLINEOPERATIONID   OUT NUMBER, -- ID ноепюжхх хг TB_OFFLINEOPERATIONS
                                          OUT_OPERATION_LIST       OUT VARCHAR2 -- яохянй ID ноепюжхи TB_OFFLINEOPERATIONS
                                          ) RETURN NUMBER IS

  v_res            NUMBER; -- ярюрся бнгбпюрю, еякх япюаюршбюер яжемюпхи, рн бнгбпюыюел 1
  nCount1          NUMBER := 0; -- ЯВЕРВХЙ ВЕЦН КХАН
  v_oper_list      varchar2(4000);
  v_sum            number;
  v_count          number;
BEGIN
  v_res := -1;

  /*************************************************************************************
  нохяюмхе яжемюпхъ:
  1.22 нОЕПЮЖХЪ (ЯДЕКЙЮ) Я ДЕМЭЦЮЛХ Х (ХКХ) ХМШЛ ХЛСЫЕЯРБНЛ ОН ЙНРНПНИ БНГМХЙЮЕР НЯМНБЮМХЕ ОНКЮЦЮРЭ,
  ВРН ДЮММЮЪ НОЕПЮЖХЪ (ЯДЕКЙЮ) МЕ ХЛЕЕР НВЕБХДМНЦН ЩЙНМНЛХВЕЯЙНЦН ЯЛШЯКЮ

  йНМРПНКЭМЮЪ НОЕПЮЖХЪ:
  йд = 1,3,7,10
  х Б НЯМНБЮМХХ ОКЮРЕФЮ ЕЯРЭ ЯКНБЮ, УЮПЮЙРЕПХГСЧЫХИ ЯВЕР ЙЮЙ ДЕОНГХР
  нДХМ ХГ СВЮЯРМХЙНБ Я Client_role = 3,4
  лХМХЛЮКЭМЮЪ ЯСЛЛЮ НОЕПЮЖХХ - СЙЮГЮРЭ?

  мЮЙНОХРЕКЭМН:
  бЯЕ НОЕПЮЖХХ ГЮ ОЕПХНД = 30 ЙЮКЕМДЮПМШУ ДМЕИ
  Я ЙЮРЕЦНПХЕИ ДНЙСЛЕМРЮ = 1,3,7,10
  цДЕ С ЙКХЕМРЮ ЯВЕР = ЯВЕРС ХГ ЙНМРПНКЭМНИ НОЕПЮЖХХ
  х ПНКЭ ЩРНЦН ЙКХЕМРЮ = ПНКХ СВЮЯРМХЙЮ ХГ ЙНМРПНКЭМНИ НОЕПЮЖХХ

  ЯСЛЛЮ (МЮЙНОХРЕКЭМЮЪ) >=  10 ЛКМ.РЦ


  *************************************************************************************/
  -- мювюкн онкэгнбюрекэяйнцн йндю

  IF IN_DOCCATEGORY IN (1, 3, 7, 10) AND is_deposit(IN_OPERATIONREASON) = 1 THEN

    SELECT COUNT(*)
    INTO   nCount1
    FROM   tb_off_members t
    WHERE  t.p_operationid = IN_ID
    AND    t.p_clientrole IN (3, 4)
    AND    instr(t.p_name, 'мюпндмши аюмй') = 0;

    IF nCount1 = 0 THEN
      return v_res;
    END IF;

    for rec_client in (
      select t.p_account,
             t.p_name,
             t.p_clientrole
      from   tb_off_members t
      where  t.p_operationid = in_id
      and    t.p_clientrole not in (3,4)
      and    t.p_account !='-'
    )
    loop

      SELECT sum(o.p_baseamount),
             count(1),
             stragg(o.id||'|')
      INTO   v_sum,
             v_count,
             v_oper_list
      FROM   tb_offlineoperations o,
             tb_off_members m
      WHERE  m.p_operationid = o.id
      AND    o.p_operationdatetime between IN_OPERATIONDATETIME - 30
                                   and     IN_OPERATIONDATETIME
      AND    m.p_account = rec_client.p_account
      AND    m.p_clientrole = rec_client.p_clientrole
      AND    is_deposit(o.p_operationreason) = 1
      AND    o.p_doccategory IN (1, 3, 7, 10)
      AND    EXISTS(
               SELECT 1
               FROM   tb_off_members m1
               WHERE  m1.p_operationid = o.id
               AND    m1.p_clientrole in (3,4)
               and    m1.p_name != m.p_name
             );
    end loop;
    IF v_sum >= 10000000 and v_count > 1 THEN

      OUT_MESS_NUMBER          := -1;
      OUT_MESS_DATE            := SYSDATE;
      OUT_MESS_KIND            := '1';
      OUT_MESS_STATUS          := '2';
      OUT_SUSPIC_KIND          := '1';
      OUT_SUSPICIOUSTYPECODE   := '0911';
      OUT_CRITERIAFIRST        := '1036';
      OUT_CRITERIASECOND       := NULL;
      OUT_CRITERIATHIRD        := NULL;
      OUT_CRITERIADIFFICULTIES := '';
      OUT_OPERATIONEXTRAINFO   := '[яЖЕМЮПХИ 1002.1] пЮГНБЮЪ НОЕПЮЖХЪ' ||
                                  chr(10) || 'мЮГМЮВЕМХЕ ОКЮРЕФЮ: ' ||
                                  IN_OPERATIONREASON || chr(10) ||
                                  'нРОПЮБХРЕКЭ ДЕМЕЦ/БМНЯХРЕКЭ ДЕМЕЦ МЮ ДЕОНГХР МЕ ЪБКЪЕРЯЪ БКЮДЕКЭЖЕЛ ЯАЕПЕЦЮРЕКЭМНЦН ЯВЕРЮ (ДЕОНГХРЮ)'
                                  ||chr(10)||get_history_details(v_oper_list);
      IN_OPERATIONREASON       := '29';
      OUT_OFFLINEOPERATIONID   := IN_ID;
      OUT_OPERATION_LIST       := v_oper_list;
      v_res                    := 1;
    END IF;
  END IF;

  -- йнмеж онкэгнбюрекэяйнцн йндю
  RETURN v_res;
END;
/

prompt
prompt Creating function SCENARIO#10022
prompt ================================
prompt
create or replace function aml_user.SCENARIO#10022(IN_ID                    in out NUMBER, -- хд
                                         IN_ISSUEDBID             in out NUMBER, -- ад хярнвмхй
                                         IN_BANKOPERATIONID       in out VARCHAR2, -- мнлеп ноепюжхх
                                         IN_ORDERNUMBER           in out VARCHAR2, -- мнлеп гюъбйх б яхяреле
                                         IN_BRANCH                in out VARCHAR2, -- йнд тхкхюкю
                                         IN_CURRENCYCODE          in out VARCHAR2, -- йнд бюкчрш
                                         IN_OPERATIONDATETIME     in out DATE, -- дюрю ноепюжхх
                                         IN_BASEAMOUNT            in out NUMBER, -- ясллю (мюж)
                                         IN_CURRENCYAMOUNT        in out NUMBER, -- ясллю (бюк)
                                         IN_EKNPCODE              in out VARCHAR2, -- ймо
                                         IN_DOCNUMBER             in out VARCHAR2, -- ╧ днйслемрю
                                         IN_DOCDATE               in out DATE, -- дюрю днйслемрю
                                         IN_DOCCATEGORY           in out NUMBER, -- йюрецнпхъ днйслемрю
                                         IN_DOCSUSPIC             in out NUMBER, -- рхо онднгпхрекэмнярх
                                         IN_OPERATIONSTATUS       in out NUMBER, -- янярнъмхе ноепюжхх
                                         IN_OPERATIONREASON       in out VARCHAR2, -- нямнбюмхе янбепьемхъ
                                         OUT_MESS_NUMBER          out NUMBER, -- тл1 - мнлеп тнплш
                                         OUT_MESS_DATE            out DATE, -- тл1 - дюрю тнплш
                                         OUT_MESS_KIND            out NUMBER, -- тл1 - бхд днйслемрю
                                         OUT_MESS_STATUS          out NUMBER, -- тл1 - нямнбюмхе ондювх
                                         OUT_SUSPIC_KIND          out NUMBER, -- бхд днйслемрю (тл/онднгпхр)
                                         OUT_SUSPICIOUSTYPECODE   out NUMBER, -- йнд йюрецнпхх тл
                                         OUT_CRITERIAFIRST        out NUMBER, -- опхгмюй онднгпхрекэмнярх 1
                                         OUT_CRITERIASECOND       out NUMBER, -- опхгмюй онднгпхрекэмнярх 2
                                         OUT_CRITERIATHIRD        out NUMBER, -- опхгмюй онднгпхрекэмнярх 3
                                         OUT_CRITERIADIFFICULTIES out VARCHAR2, -- гюрпсдмемхъ
                                         OUT_OPERATIONEXTRAINFO   out VARCHAR2, -- днонкмхрекэмюъ хмтнплюжхъ
                                         OUT_OFFLINEOPERATIONID   out NUMBER, -- ID ноепюжхх хг TB_OFFLINEOPERATIONS
                                         OUT_OPERATION_LIST       out VARCHAR2 -- яохянй ID ноепюжхи TB_OFFLINEOPERATIONS
                                         )

 return number is
  v_res  number; -- ярюрся бнгбпюрю, еякх япюаюршбюер яжемюпхи, рн бнгбпюыюел 1
  nCheck number(1) := 0; -- ЯРЮРСЯ ОПНБЕПЙХ, 0 БЯЕ МНПЛЮКЭМН, 1 ЯПЮАНРЮКЮ ОПНБЕПЙЮ
  nCount number := 0; -- ЯВЕРВХЙ ВЕЦН КХАН
begin
  v_res := -1;

  /*************************************************************************************
  нохяюмхе яжемюпхъ:
  1.22 нОЕПЮЖХЪ (ЯДЕКЙЮ) Я ДЕМЭЦЮЛХ Х (ХКХ) ХМШЛ ХЛСЫЕЯРБНЛ ОН ЙНРНПНИ БНГМХЙЮЕР НЯМНБЮМХЕ ОНКЮЦЮРЭ,
  ВРН ДЮММЮЪ НОЕПЮЖХЪ (ЯДЕКЙЮ) МЕ ХЛЕЕР НВЕБХДМНЦН ЩЙНМНЛХВЕЯЙНЦН ЯЛШЯКЮ

    (оНКСВЮРЕКЭ = МЕПЕГХДЕМР
    х
    нРОПЮБХРЕКЭ = МЕПЕГХДЕМР)
    х
    яСЛЛЮ > 15 000 000 KZT

  *************************************************************************************/
  -- мювюкн онкэгнбюрекэяйнцн йндю

  if IN_BASEAMOUNT >= 15000000 then

    -- МЮИДЕЛ, Б МЮВЮКЕ, (оНКСВЮРЕКЭ = МЕПЕГХДЕМР
    Select count(1)
      into nCheck
      From tb_off_members t
     where t.p_operationid = IN_ID
       and p_clientrole in (1, 2)
       and p_countrycode != 398
       and instr(t.p_name, 'мюпндмши аюмй') = 0;

    select count(1)
      into nCount
      from (select count(1)
              from tb_off_members t
             where t.p_operationid = IN_ID
               and p_countrycode != 398
               and p_clientrole in (1, 2)
               and instr(t.p_name, 'мюпндмши аюмй') = 0
             group by t.p_name);

    if ncount > 1 then
      return v_res;
    end if;

    Select count(1)
      into nCount
      From tb_off_members t
     where t.p_client_type != 2
     and t.p_operationid = in_ID;

    if nCount > 0 then
      return v_res;
    end if;

    if nCheck > 1 then

      OUT_MESS_NUMBER          := -1;
      OUT_MESS_DATE            := sysdate;
      OUT_MESS_KIND            := '1';
      OUT_MESS_STATUS          := '2';
      OUT_SUSPIC_KIND          := '1';
      OUT_SUSPICIOUSTYPECODE   := '0911';
      OUT_CRITERIAFIRST        := '1036';
      OUT_CRITERIASECOND       := null;
      OUT_CRITERIATHIRD        := null;
      OUT_CRITERIADIFFICULTIES := '';
      OUT_OPERATIONEXTRAINFO   := '[яЖЕМЮПХИ ╧ 1002.2] пЮГНБЮЪ НОЕПЮЖХЪ' ||
                                  chr(10) || 'мЮГМЮВЕМХЕ ОКЮРЕФЮ: ' ||
                                  IN_OPERATIONREASON || chr(10) ||
                                  'нОЕПЮЖХЪ (ЯДЕКЙЮ) Я ДЕМЭЦЮЛХ Х (ХКХ) ХМШЛ ХЛСЫЕЯРБНЛ ОН ЙНРНПНИ БНГМХЙЮЕР НЯМНБЮМХЕ ОНКЮЦЮРЭ,' ||
                                  chr(10) ||
                                  'ВРН ДЮММЮЪ НОЕПЮЖХЪ (ЯДЕКЙЮ) МЕ ХЛЕЕР НВЕБХДМНЦН ЩЙНМНЛХВЕЯЙНЦН ЯЛШЯКЮ' ||
                                  chr(10) ||
                                  'оНКСВЮРЕКЭ Х НРОПЮБХРЕКЭ МЕПЕГХДЕМРШ , Б ПЮГЛЕПЕ > 15000000 KZT';
      IN_OPERATIONREASON       := '29';
      OUT_OFFLINEOPERATIONID   := IN_ID;
      OUT_OPERATION_LIST       := IN_ID;
      v_res                    := 1;
    end if;
  end if;

  -- йнмеж онкэгнбюрекэяйнцн йндю
  return v_res;
end;
/

prompt
prompt Creating function SCENARIO#10023
prompt ================================
prompt
create or replace function aml_user.SCENARIO#10023(IN_ID                    in out NUMBER, -- хд
                                         IN_ISSUEDBID             in out NUMBER, -- ад хярнвмхй
                                         IN_BANKOPERATIONID       in out VARCHAR2, -- мнлеп ноепюжхх
                                         IN_ORDERNUMBER           in out VARCHAR2, -- мнлеп гюъбйх б яхяреле
                                         IN_BRANCH                in out VARCHAR2, -- йнд тхкхюкю
                                         IN_CURRENCYCODE          in out VARCHAR2, -- йнд бюкчрш
                                         IN_OPERATIONDATETIME     in out DATE, -- дюрю ноепюжхх
                                         IN_BASEAMOUNT            in out NUMBER, -- ясллю (мюж)
                                         IN_CURRENCYAMOUNT        in out NUMBER, -- ясллю (бюк)
                                         IN_EKNPCODE              in out VARCHAR2, -- ймо
                                         IN_DOCNUMBER             in out VARCHAR2, -- ╧ днйслемрю
                                         IN_DOCDATE               in out DATE, -- дюрю днйслемрю
                                         IN_DOCCATEGORY           in out NUMBER, -- йюрецнпхъ днйслемрю
                                         IN_DOCSUSPIC             in out NUMBER, -- рхо онднгпхрекэмнярх
                                         IN_OPERATIONSTATUS       in out NUMBER, -- янярнъмхе ноепюжхх
                                         IN_OPERATIONREASON       in out VARCHAR2, -- нямнбюмхе янбепьемхъ
                                         OUT_MESS_NUMBER          out NUMBER, -- тл1 - мнлеп тнплш
                                         OUT_MESS_DATE            out DATE, -- тл1 - дюрю тнплш
                                         OUT_MESS_KIND            out NUMBER, -- тл1 - бхд днйслемрю
                                         OUT_MESS_STATUS          out NUMBER, -- тл1 - нямнбюмхе ондювх
                                         OUT_SUSPIC_KIND          out NUMBER, -- бхд днйслемрю (тл/онднгпхр)
                                         OUT_SUSPICIOUSTYPECODE   out NUMBER, -- йнд йюрецнпхх тл
                                         OUT_CRITERIAFIRST        out NUMBER, -- опхгмюй онднгпхрекэмнярх 1
                                         OUT_CRITERIASECOND       out NUMBER, -- опхгмюй онднгпхрекэмнярх 2
                                         OUT_CRITERIATHIRD        out NUMBER, -- опхгмюй онднгпхрекэмнярх 3
                                         OUT_CRITERIADIFFICULTIES out VARCHAR2, -- гюрпсдмемхъ
                                         OUT_OPERATIONEXTRAINFO   out VARCHAR2, -- днонкмхрекэмюъ хмтнплюжхъ
                                         OUT_OFFLINEOPERATIONID   out NUMBER, -- ID ноепюжхх хг TB_OFFLINEOPERATIONS
                                         OUT_OPERATION_LIST       out VARCHAR2 -- яохянй ID ноепюжхи TB_OFFLINEOPERATIONS
                                         )

 return number is
  v_res  number; -- ярюрся бнгбпюрю, еякх япюаюршбюер яжемюпхи, рн бнгбпюыюел 1
  nCheck number(1) := 0; -- ЯРЮРСЯ ОПНБЕПЙХ, 0 БЯЕ МНПЛЮКЭМН, 1 ЯПЮАНРЮКЮ ОПНБЕПЙЮ
  nCount number := 0; -- ЯВЕРВХЙ ВЕЦН КХАН
begin
  v_res := -1;

  /*************************************************************************************
  нохяюмхе яжемюпхъ:
  1.3 нЯСЫЕЯРБКЕМХЕ ОКЮРЕФЕИ, ОЕПЕБНДНБ ХКХ ГЮВХЯКЕМХЕ ДЕМЕЦ МЮ ДЕОНГХР Б ОНКЭГС РПЕРЭЕЦН КХЖЮ,
  МЕ ХЛЕЧЫЕЦН НВЕБХДМНЦН ЩЙНМНЛХВЕЯЙНЦН ЯЛШЯКЮ

    ймо = 119, 110
    х
    оНКСВЮРЕКЭ = йХРЮИ
    х
    нРОПЮБХРЕКЭ = ПЕГХДЕМР
    х
    ясллю = 1 500 000 KZT


  *************************************************************************************/
  -- мювюкн онкэгнбюрекэяйнцн йндю
  if IN_BASEAMOUNT >= 2000000 then

    if IN_EKNPCODE in ('119', '110') then
      if instr(UPPER(IN_OPERATIONREASON),
               'жекебни бйкюд мю дереи') > 0 or
         instr(UPPER(IN_OPERATIONREASON), 'юй анрю') > 0 or
         instr(UPPER(IN_OPERATIONREASON), 'мюпндмши деряйхи') > 0 or
         instr(UPPER(IN_OPERATIONREASON), 'HALYK-деряйхи') > 0 or
         instr(UPPER(IN_OPERATIONREASON), 'HALYK - деряйхи 2011') > 0 then
        -- МЮИДЕЛ, Б МЮВЮКЕ, оНКСВЮРЕКЭ = йХРЮИ
        Select count(1)
          into nCount
          From tb_off_members t
         where t.p_operationid = IN_ID
           and p_clientrole = 2
           and p_countrycode = 156
           and instr(t.p_name, 'мюпндмши аюмй') = 0;

        if nCount > 0 then
          -- ЕЯКХ МЮЬКХ, РН МЮИДЕЛ нРОПЮБХРЕКЭ = ПЕГХДЕМР
          Select count(1)
            into nCheck
            From tb_off_members t
           where t.p_operationid = IN_ID
             and p_clientrole = 1
             and p_countrycode = 398
             and instr(t.p_name, 'мюпндмши аюмй') = 0;
        end if;

        if nCheck > 0 then

          OUT_MESS_NUMBER          := -1;
          OUT_MESS_DATE            := sysdate;
          OUT_MESS_KIND            := '1';
          OUT_MESS_STATUS          := '2';
          OUT_SUSPIC_KIND          := '1';
          OUT_SUSPICIOUSTYPECODE   := '0911';
          OUT_CRITERIAFIRST        := '1036';
          OUT_CRITERIASECOND       := null;
          OUT_CRITERIATHIRD        := null;
          OUT_CRITERIADIFFICULTIES := '';
          OUT_OPERATIONEXTRAINFO   := '[яЖЕМЮПХИ ╧ 1002.3] пЮГНБЮЪ НОЕПЮЖХЪ' ||
                                      chr(10) || 'мЮГМЮВЕМХЕ ОКЮРЕФЮ: ' ||
                                      IN_OPERATIONREASON || chr(10) ||
                                      'нЯСЫЕЯРБКЕМХЕ ОКЮРЕФЕИ, ОЕПЕБНДНБ ХКХ ГЮВХЯКЕМХЕ ДЕМЕЦ МЮ ДЕОНГХР Б ОНКЭГС ' ||
                                      chr(10) ||
                                      'РПЕРЭЕЦН КХЖЮ, Б ПЮГЛЕПЕ > 1500000 KZT';
          IN_OPERATIONREASON       := '29';
          OUT_OFFLINEOPERATIONID   := IN_ID;
          OUT_OPERATION_LIST       := IN_ID;
          v_res                    := 1;
        end if;
      end if;
    end if;
  end if;
  -- йнмеж онкэгнбюрекэяйнцн йндю
  return v_res;
end;
/

prompt
prompt Creating function SCENARIO#10024
prompt ================================
prompt
create or replace function aml_user.SCENARIO#10024(IN_ID                    in out NUMBER, -- хд
                                         IN_ISSUEDBID             in out NUMBER, -- ад хярнвмхй
                                         IN_BANKOPERATIONID       in out VARCHAR2, -- мнлеп ноепюжхх
                                         IN_ORDERNUMBER           in out VARCHAR2, -- мнлеп гюъбйх б яхяреле
                                         IN_BRANCH                in out VARCHAR2, -- йнд тхкхюкю
                                         IN_CURRENCYCODE          in out VARCHAR2, -- йнд бюкчрш
                                         IN_OPERATIONDATETIME     in out DATE, -- дюрю ноепюжхх
                                         IN_BASEAMOUNT            in out NUMBER, -- ясллю (мюж)
                                         IN_CURRENCYAMOUNT        in out NUMBER, -- ясллю (бюк)
                                         IN_EKNPCODE              in out VARCHAR2, -- ймо
                                         IN_DOCNUMBER             in out VARCHAR2, -- ╧ днйслемрю
                                         IN_DOCDATE               in out DATE, -- дюрю днйслемрю
                                         IN_DOCCATEGORY           in out NUMBER, -- йюрецнпхъ днйслемрю
                                         IN_DOCSUSPIC             in out NUMBER, -- рхо онднгпхрекэмнярх
                                         IN_OPERATIONSTATUS       in out NUMBER, -- янярнъмхе ноепюжхх
                                         IN_OPERATIONREASON       in out VARCHAR2, -- нямнбюмхе янбепьемхъ
                                         OUT_MESS_NUMBER          out NUMBER, -- тл1 - мнлеп тнплш
                                         OUT_MESS_DATE            out DATE, -- тл1 - дюрю тнплш
                                         OUT_MESS_KIND            out NUMBER, -- тл1 - бхд днйслемрю
                                         OUT_MESS_STATUS          out NUMBER, -- тл1 - нямнбюмхе ондювх
                                         OUT_SUSPIC_KIND          out NUMBER, -- бхд днйслемрю (тл/онднгпхр)
                                         OUT_SUSPICIOUSTYPECODE   out NUMBER, -- йнд йюрецнпхх тл
                                         OUT_CRITERIAFIRST        out NUMBER, -- опхгмюй онднгпхрекэмнярх 1
                                         OUT_CRITERIASECOND       out NUMBER, -- опхгмюй онднгпхрекэмнярх 2
                                         OUT_CRITERIATHIRD        out NUMBER, -- опхгмюй онднгпхрекэмнярх 3
                                         OUT_CRITERIADIFFICULTIES out VARCHAR2, -- гюрпсдмемхъ
                                         OUT_OPERATIONEXTRAINFO   out VARCHAR2, -- днонкмхрекэмюъ хмтнплюжхъ
                                         OUT_OFFLINEOPERATIONID   out NUMBER, -- ID ноепюжхх хг TB_OFFLINEOPERATIONS
                                         OUT_OPERATION_LIST       out VARCHAR2 -- яохянй ID ноепюжхи TB_OFFLINEOPERATIONS
                                         )

 return number is
  v_res  number; -- ярюрся бнгбпюрю, еякх япюаюршбюер яжемюпхи, рн бнгбпюыюел 1
  nCheck number(1) := 0; -- ЯРЮРСЯ ОПНБЕПЙХ, 0 БЯЕ МНПЛЮКЭМН, 1 ЯПЮАНРЮКЮ ОПНБЕПЙЮ
  nCount number := 0; -- ЯВЕРВХЙ ВЕЦН КХАН
begin
  v_res := -1;

  /*************************************************************************************
  нохяюмхе яжемюпхъ:
  1.3 нЯСЫЕЯРБКЕМХЕ ОКЮРЕФЕИ, ОЕПЕБНДНБ ХКХ ГЮВХЯКЕМХЕ ДЕМЕЦ МЮ ДЕОНГХР Б ОНКЭГС РПЕРЭЕЦН КХЖЮ,
  МЕ ХЛЕЧЫЕЦН НВЕБХДМНЦН ЩЙНМНЛХВЕЯЙНЦН ЯЛШЯКЮ

    ймо = 110,111, 112,119
    х
    оНКСВЮРЕКЭ = (тк х ПЕГХДЕМР)
    х
    нРОПЮБХРЕКЭ = (тк х ПЕГХДЕМР)
    х
    ясллю >= 10 000 000 KZT


  *************************************************************************************/
  -- мювюкн онкэгнбюрекэяйнцн йндю
  if IN_BASEAMOUNT >= 10000000 then
    if IN_EKNPCODE in ('110', '111', '112', '119') then
      if instr(UPPER(IN_OPERATIONREASON),
               'жекебни бйкюд мю дереи') > 0 or
         instr(UPPER(IN_OPERATIONREASON), 'юй анрю') > 0 or
         instr(UPPER(IN_OPERATIONREASON), 'мюпндмши деряйхи') > 0 or
         instr(UPPER(IN_OPERATIONREASON), 'HALYK-деряйхи') > 0 or
         instr(UPPER(IN_OPERATIONREASON), 'HALYK - деряйхи 2011') > 0 then
        -- МЮИДЕЛ, Б МЮВЮКЕ, оНКСВЮРЕКЭ = (тк х ПЕГХДЕМР)
        Select count(1)
          into nCount
          From tb_off_members t
         where t.p_operationid = IN_ID
           and t.p_clientrole = 2
           and t.p_countrycode = 398
           and t.p_client_type = 2
           and instr(t.p_name, 'мюпндмши аюмй') = 0;

        if nCount > 0 then
          -- ЕЯКХ МЮЬКХ, РН МЮИДЕЛ нРОПЮБХРЕКЭ = (тк х ПЕГХДЕМР)
          Select count(1)
            into nCheck
            From tb_off_members t
           where t.p_operationid = IN_ID
             and p_clientrole = 1
             and p_countrycode = 398
             and t.p_client_type = 2
             and instr(t.p_name, 'мюпндмши аюмй') = 0;
        end if;

        if nCheck > 0 then

          OUT_MESS_NUMBER          := get_mess_number();
          OUT_MESS_DATE            := sysdate;
          OUT_MESS_KIND            := '1';
          OUT_MESS_STATUS          := '2';
          OUT_SUSPIC_KIND          := '1';
          OUT_SUSPICIOUSTYPECODE   := '0911';
          OUT_CRITERIAFIRST        := '1036';
          OUT_CRITERIASECOND       := null;
          OUT_CRITERIATHIRD        := null;
          OUT_CRITERIADIFFICULTIES := '';
          OUT_OPERATIONEXTRAINFO   := '[яЖЕМЮПХИ ╧ 1002.4] пЮГНБЮЪ НОЕПЮЖХЪ' ||
                                      chr(10) || 'мЮГМЮВЕМХЕ ОКЮРЕФЮ: ' ||
                                      IN_OPERATIONREASON || chr(10) ||
                                      'нЯСЫЕЯРБКЕМХЕ ОКЮРЕФЕИ, ОЕПЕБНДНБ ХКХ ГЮВХЯКЕМХЕ ДЕМЕЦ МЮ ДЕОНГХР Б ОНКЭГС ' ||
                                      chr(10) ||
                                      'РПЕРЭЕЦН КХЖЮ, Б ПЮГЛЕПЕ > 10000000 KZT';
          IN_OPERATIONREASON       := '29';
          OUT_OFFLINEOPERATIONID   := IN_ID;
          OUT_OPERATION_LIST       := IN_ID;
          v_res                    := 1;
        end if;
      end if;
    end if;
  end if;
  -- йнмеж онкэгнбюрекэяйнцн йндю
  return v_res;
end;
/

prompt
prompt Creating function SCENARIO#10025
prompt ================================
prompt
create or replace function aml_user.SCENARIO#10025(IN_ID                    in out NUMBER, -- хд
                                         IN_ISSUEDBID             in out NUMBER, -- ад хярнвмхй
                                         IN_BANKOPERATIONID       in out VARCHAR2, -- мнлеп ноепюжхх
                                         IN_ORDERNUMBER           in out VARCHAR2, -- мнлеп гюъбйх б яхяреле
                                         IN_BRANCH                in out VARCHAR2, -- йнд тхкхюкю
                                         IN_CURRENCYCODE          in out VARCHAR2, -- йнд бюкчрш
                                         IN_OPERATIONDATETIME     in out DATE, -- дюрю ноепюжхх
                                         IN_BASEAMOUNT            in out NUMBER, -- ясллю (мюж)
                                         IN_CURRENCYAMOUNT        in out NUMBER, -- ясллю (бюк)
                                         IN_EKNPCODE              in out VARCHAR2, -- ймо
                                         IN_DOCNUMBER             in out VARCHAR2, -- ╧ днйслемрю
                                         IN_DOCDATE               in out DATE, -- дюрю днйслемрю
                                         IN_DOCCATEGORY           in out NUMBER, -- йюрецнпхъ днйслемрю
                                         IN_DOCSUSPIC             in out NUMBER, -- рхо онднгпхрекэмнярх
                                         IN_OPERATIONSTATUS       in out NUMBER, -- янярнъмхе ноепюжхх
                                         IN_OPERATIONREASON       in out VARCHAR2, -- нямнбюмхе янбепьемхъ
                                         OUT_MESS_NUMBER          out NUMBER, -- тл1 - мнлеп тнплш
                                         OUT_MESS_DATE            out DATE, -- тл1 - дюрю тнплш
                                         OUT_MESS_KIND            out NUMBER, -- тл1 - бхд днйслемрю
                                         OUT_MESS_STATUS          out NUMBER, -- тл1 - нямнбюмхе ондювх
                                         OUT_SUSPIC_KIND          out NUMBER, -- бхд днйслемрю (тл/онднгпхр)
                                         OUT_SUSPICIOUSTYPECODE   out NUMBER, -- йнд йюрецнпхх тл
                                         OUT_CRITERIAFIRST        out NUMBER, -- опхгмюй онднгпхрекэмнярх 1
                                         OUT_CRITERIASECOND       out NUMBER, -- опхгмюй онднгпхрекэмнярх 2
                                         OUT_CRITERIATHIRD        out NUMBER, -- опхгмюй онднгпхрекэмнярх 3
                                         OUT_CRITERIADIFFICULTIES out VARCHAR2, -- гюрпсдмемхъ
                                         OUT_OPERATIONEXTRAINFO   out VARCHAR2, -- днонкмхрекэмюъ хмтнплюжхъ
                                         OUT_OFFLINEOPERATIONID   out NUMBER, -- ID ноепюжхх хг TB_OFFLINEOPERATIONS
                                         OUT_OPERATION_LIST       out VARCHAR2 -- яохянй ID ноепюжхи TB_OFFLINEOPERATIONS
                                         )

 return number is
  v_res  number; -- ярюрся бнгбпюрю, еякх япюаюршбюер яжемюпхи, рн бнгбпюыюел 1
  nCheck number(1) := 0; -- ЯРЮРСЯ ОПНБЕПЙХ, 0 БЯЕ МНПЛЮКЭМН, 1 ЯПЮАНРЮКЮ ОПНБЕПЙЮ
  nCount number := 0; -- ЯВЕРВХЙ ВЕЦН КХАН
begin
  v_res := -1;

  /*************************************************************************************
  нохяюмхе яжемюпхъ:
  1.3 нЯСЫЕЯРБКЕМХЕ ОКЮРЕФЕИ, ОЕПЕБНДНБ ХКХ ГЮВХЯКЕМХЕ ДЕМЕЦ МЮ ДЕОНГХР Б ОНКЭГС РПЕРЭЕЦН КХЖЮ,
  МЕ ХЛЕЧЫЕЦН НВЕБХДМНЦН ЩЙНМНЛХВЕЯЙНЦН ЯЛШЯКЮ

    ймо =  111, 112
    х
    оНКСВЮРЕКЭ = (тк х МЕПЕГХДЕМР)
    х
    нРОПЮБХРЕКЭ = (тк х ПЕГХДЕМР)
    х
    ясллю >= 2 000 000 KZT

  *************************************************************************************/
  -- мювюкн онкэгнбюрекэяйнцн йндю
  if IN_BASEAMOUNT >= 2000000 then
    if IN_EKNPCODE in ('111', '112') then
      if instr(UPPER(IN_OPERATIONREASON),
               'жекебни бйкюд мю дереи') > 0 or
         instr(UPPER(IN_OPERATIONREASON), 'юй анрю') > 0 or
         instr(UPPER(IN_OPERATIONREASON), 'мюпндмши деряйхи') > 0 or
         instr(UPPER(IN_OPERATIONREASON), 'HALYK-деряйхи') > 0 or
         instr(UPPER(IN_OPERATIONREASON), 'HALYK - деряйхи 2011') > 0 then
        -- МЮИДЕЛ, Б МЮВЮКЕ, оНКСВЮРЕКЭ = (тк х МЕПЕГХДЕМР)
        Select count(1)
          into nCount
          From tb_off_members t
         where t.p_operationid = IN_ID
           and t.p_clientrole = 2
           and t.p_countrycode != 398
           and t.p_client_type = 2
           and instr(t.p_name, 'мюпндмши аюмй') = 0;

        if nCount > 0 then
          -- ЕЯКХ МЮЬКХ, РН МЮИДЕЛ нРОПЮБХРЕКЭ = (тк х ПЕГХДЕМР)
          Select count(1)
            into nCheck
            From tb_off_members t
           where t.p_operationid = IN_ID
             and p_clientrole = 1
             and p_countrycode = 398
             and t.p_client_type = 2
             and instr(t.p_name, 'мюпндмши аюмй') = 0;
        end if;

        if nCheck > 0 then

          OUT_MESS_NUMBER          := get_mess_number();
          OUT_MESS_DATE            := sysdate;
          OUT_MESS_KIND            := '1';
          OUT_MESS_STATUS          := '2';
          OUT_SUSPIC_KIND          := '1';
          OUT_SUSPICIOUSTYPECODE   := '0911';
          OUT_CRITERIAFIRST        := '1036';
          OUT_CRITERIASECOND       := null;
          OUT_CRITERIATHIRD        := null;
          OUT_CRITERIADIFFICULTIES := '';
          OUT_OPERATIONEXTRAINFO   := '[яЖЕМЮПХИ ╧ 1002.5] пЮГНБЮЪ НОЕПЮЖХЪ' ||
                                      chr(10) || 'мЮГМЮВЕМХЕ ОКЮРЕФЮ: ' ||
                                      IN_OPERATIONREASON || chr(10) ||
                                      'нЯСЫЕЯРБКЕМХЕ ОКЮРЕФЕИ, ОЕПЕБНДНБ ХКХ ГЮВХЯКЕМХЕ ДЕМЕЦ МЮ ДЕОНГХР Б ОНКЭГС ' ||
                                      chr(10) ||
                                      'РПЕРЭЕЦН КХЖЮ, Б ПЮГЛЕПЕ > 2000000 KZT';
          IN_OPERATIONREASON       := '29';
          OUT_OFFLINEOPERATIONID   := IN_ID;
          OUT_OPERATION_LIST       := IN_ID;
          v_res                    := 1;
        end if;
      end if;
    end if;
  end if;
  -- йнмеж онкэгнбюрекэяйнцн йндю
  return v_res;
end;
/